
package Mernis;
//------------------------------------------------------------------------
//
// Generated by www.easywsdl.com
// Version: 9.0.1.0
//
// Created by Quasar Development 
//
// This class has been generated for test purposes only and cannot be used in any commercial project.
// To use it in commercial project, you need to generate this class again with Premium account.
// Check https://EasyWsdl.com/Payment/PremiumAccountDetails to see all benefits of Premium account.
//
// Licence: F6DE6F68E7C2E9D469FD6E42E47BEE156C89DDB15949D72EAE7B3CE29072B54F8D795DCA91EF4B633C7A3C5B1472C7002BC560A3F2A00E698EBD7262800355C1
//------------------------------------------------------------------------
import java.net.URL;
import java.io.*;
import java.net.HttpURLConnection;
import java.util.HashMap;
import java.util.Map;
import java.util.List;

public interface NAUConnectionProvider
{
    NAUResponseData sendRequest(String url,String requestBody,HashMap< String,String> httpHeaders, NAURequestResultHandler handler) throws java.lang.Exception;
}

class NAUHttpConnectionProvider implements NAUConnectionProvider{

    public void prepareRequest(HttpURLConnection url,String requestBody, NAURequestResultHandler handler) throws java.lang.Exception {
        OutputStreamWriter wr = new OutputStreamWriter(url.getOutputStream());
        wr.write(requestBody);
        wr.flush();
    }

    @Override
    public NAUResponseData sendRequest(String url,String requestBody, HashMap< String, String> httpHeaders,NAURequestResultHandler handler ) throws java.lang.Exception
    {
        URL urlObject=new URL(url);
        HttpURLConnection connection=(HttpURLConnection)urlObject.openConnection();
        connection.setRequestMethod("POST");
        connection.setDoOutput(true);
        for(Map.Entry<String, String> entry : httpHeaders.entrySet())
        {
            connection.setRequestProperty(entry.getKey(),entry.getValue());
        }

        prepareRequest(connection,requestBody,handler);


        NAUResponseData response=new NAUResponseData();
        for(Map.Entry<String, List<String>> entry : connection.getHeaderFields().entrySet())
        {
            if(entry.getKey()!=null)
            {
                String values = "";
                for (String value : entry.getValue()) {
                    values = values + value;
                }
                response.getHeaders().put(entry.getKey(),values);
            }
        }
        
        try(InputStream dataStream = getResponseStream(connection,response,handler))
        {
            response.setBody(NAUHelper.streamToString(dataStream));
        }
        
        return response;
    }

    protected InputStream getResponseStream(
        HttpURLConnection url,
        NAUResponseData response,
        NAURequestResultHandler handler
    ) throws java.lang.Exception
    {
        try{
            return url.getInputStream();
        }
        catch (IOException ex)
        {
            return url.getErrorStream();
        }
    }
}